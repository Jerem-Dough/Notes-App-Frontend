{"ast":null,"code":"import React from'react';import{AppBar,Toolbar,Typography,Container}from'@mui/material';import{Outlet,useLocation}from'react-router-dom';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const Layout=()=>{const location=useLocation();const isLoggedIn=!!localStorage.getItem('token');// Check if the user is logged in\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Container,{maxWidth:\"lg\",style:{marginTop:isLoggedIn?'40px':'0'},children:/*#__PURE__*/_jsx(Outlet,{})})});};export default Layout;","map":{"version":3,"names":["React","AppBar","Toolbar","Typography","Container","Outlet","useLocation","jsx","_jsx","Fragment","_Fragment","Layout","location","isLoggedIn","localStorage","getItem","children","maxWidth","style","marginTop"],"sources":["D:/5 Downloads/Skool/Comp Sci/Java/web-based-notes/notes-frontend/src/components/Layout.js"],"sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Container } from '@mui/material';\r\nimport { Outlet, useLocation } from 'react-router-dom';\r\n\r\nconst Layout = () => {\r\n  const location = useLocation();\r\n  const isLoggedIn = !!localStorage.getItem('token');  // Check if the user is logged in\r\n\r\n  return (\r\n    <>\r\n      {/* Main content goes here */}\r\n      <Container maxWidth=\"lg\" style={{ marginTop: isLoggedIn ? '40px' : '0' }}>\r\n        <Outlet />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,CAAEC,OAAO,CAAEC,UAAU,CAAEC,SAAS,KAAQ,eAAe,CACtE,OAASC,MAAM,CAAEC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEvD,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnB,KAAM,CAAAC,QAAQ,CAAGN,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAO,UAAU,CAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAG;AAErD,mBACEP,IAAA,CAAAE,SAAA,EAAAM,QAAA,cAEER,IAAA,CAACJ,SAAS,EAACa,QAAQ,CAAC,IAAI,CAACC,KAAK,CAAE,CAAEC,SAAS,CAAEN,UAAU,CAAG,MAAM,CAAG,GAAI,CAAE,CAAAG,QAAA,cACvER,IAAA,CAACH,MAAM,GAAE,CAAC,CACD,CAAC,CACZ,CAAC,CAEP,CAAC,CAED,cAAe,CAAAM,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}