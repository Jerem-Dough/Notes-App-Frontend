{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Button,Container,Typography,Box}from'@mui/material';import{useNavigate}from'react-router-dom';import Header from'./Header';// Import the new Header component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=_ref=>{let{darkMode,setDarkMode}=_ref;const[notes,setNotes]=useState([]);const navigate=useNavigate();// Fetch notes when the component mounts\nuseEffect(()=>{const fetchNotes=async()=>{const token=localStorage.getItem('token');const response=await fetch('http://localhost:5000/api/notes',{headers:{'Authorization':`Bearer ${token}`}});const data=await response.json();setNotes(data);};fetchNotes();},[]);return/*#__PURE__*/_jsxs(Container,{sx:{paddingTop:'20px',minHeight:'100vh',maxHeight:'100vh',overflowY:'auto'},children:[/*#__PURE__*/_jsx(Header,{darkMode:darkMode,setDarkMode:setDarkMode}),/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Your Notes\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",sx:{marginBottom:'20px',backgroundColor:darkMode?'#6a1b9a':'#1976d2',color:'#ffffff','&:hover':{backgroundColor:darkMode?'#5a1281':'#115293'}},onClick:()=>navigate('/create'),children:\"Add New Note\"})]}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexDirection:'column',// Stack notes vertically\ngap:'20px',// Space between notes\noverflowY:'auto'// Enable scrolling for the notes section\n},children:notes.length>0?notes.map(note=>/*#__PURE__*/_jsxs(Box,{sx:{padding:'20px',backgroundColor:'var(--box-background-color)',borderRadius:'8px',boxShadow:'0px 4px 8px rgba(0, 0, 0, 0.1)',textAlign:'left',wordWrap:'break-word',// Ensure long text breaks properly\noverflowWrap:'anywhere',// Allow text to break within words\nminWidth:'300px'// Set a minimum width for notes\n},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{marginBottom:'10px'},children:note.title}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{marginBottom:'10px'},children:note.content}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",sx:{color:darkMode?'#6a1b9a':'#1976d2',// Purple in dark mode, blue in light mode\nborderColor:darkMode?'#6a1b9a':'#1976d2','&:hover':{backgroundColor:darkMode?'#5a1281':'#115293',borderColor:darkMode?'#5a1281':'#115293'},marginRight:'10px'},onClick:()=>navigate(`/edit/${note._id}`),children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",sx:{backgroundColor:'#d32f2f',// Red for delete button\ncolor:'#ffffff','&:hover':{backgroundColor:'#b71c1c'}},onClick:async()=>{const token=localStorage.getItem('token');await fetch(`http://localhost:5000/api/notes/${note._id}`,{method:'DELETE',headers:{'Authorization':`Bearer ${token}`}});setNotes(notes.filter(n=>n._id!==note._id));},children:\"Delete\"})]},note._id)):/*#__PURE__*/_jsx(Typography,{children:\"You currently have no notes.\"})})]});};export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","Button","Container","Typography","Box","useNavigate","Header","jsx","_jsx","jsxs","_jsxs","Dashboard","_ref","darkMode","setDarkMode","notes","setNotes","navigate","fetchNotes","token","localStorage","getItem","response","fetch","headers","data","json","sx","paddingTop","minHeight","maxHeight","overflowY","children","textAlign","marginBottom","variant","gutterBottom","backgroundColor","color","onClick","display","flexDirection","gap","length","map","note","padding","borderRadius","boxShadow","wordWrap","overflowWrap","minWidth","title","content","borderColor","marginRight","_id","method","filter","n"],"sources":["D:/5 Downloads/Skool/Comp Sci/Java/web-based-notes/notes-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Container, Typography, Box } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from './Header';  // Import the new Header component\r\n\r\nconst Dashboard = ({ darkMode, setDarkMode }) => {\r\n  const [notes, setNotes] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch notes when the component mounts\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/notes', {\r\n        headers: { 'Authorization': `Bearer ${token}` },\r\n      });\r\n      const data = await response.json();\r\n      setNotes(data);\r\n    };\r\n\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <Container sx={{ paddingTop: '20px', minHeight: '100vh', maxHeight: '100vh', overflowY: 'auto' }}>\r\n      {/* Use the shared Header component */}\r\n      <Header darkMode={darkMode} setDarkMode={setDarkMode} />\r\n\r\n      {/* Notes Section */}\r\n      <Box sx={{ textAlign: 'center', marginBottom: '20px' }}>\r\n        <Typography variant=\"h4\" gutterBottom>Your Notes</Typography>\r\n\r\n        {/* Button to create a new note */}\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{\r\n            marginBottom: '20px',\r\n            backgroundColor: darkMode ? '#6a1b9a' : '#1976d2',\r\n            color: '#ffffff',\r\n            '&:hover': {\r\n              backgroundColor: darkMode ? '#5a1281' : '#115293',\r\n            },\r\n          }}\r\n          onClick={() => navigate('/create')}\r\n        >\r\n          Add New Note\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Notes Grid */}\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column', // Stack notes vertically\r\n          gap: '20px',  // Space between notes\r\n          overflowY: 'auto',  // Enable scrolling for the notes section\r\n        }}\r\n      >\r\n        {notes.length > 0 ? (\r\n          notes.map((note) => (\r\n            <Box\r\n              key={note._id}\r\n              sx={{\r\n                padding: '20px',\r\n                backgroundColor: 'var(--box-background-color)',\r\n                borderRadius: '8px',\r\n                boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\r\n                textAlign: 'left',\r\n                wordWrap: 'break-word',  // Ensure long text breaks properly\r\n                overflowWrap: 'anywhere',  // Allow text to break within words\r\n                minWidth: '300px',  // Set a minimum width for notes\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" sx={{ marginBottom: '10px' }}>\r\n                {note.title}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ marginBottom: '10px' }}>\r\n                {note.content}\r\n              </Typography>\r\n\r\n              {/* Edit Button */}\r\n              <Button\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  color: darkMode ? '#6a1b9a' : '#1976d2',  // Purple in dark mode, blue in light mode\r\n                  borderColor: darkMode ? '#6a1b9a' : '#1976d2',\r\n                  '&:hover': {\r\n                    backgroundColor: darkMode ? '#5a1281' : '#115293',\r\n                    borderColor: darkMode ? '#5a1281' : '#115293',\r\n                  },\r\n                  marginRight: '10px',\r\n                }}\r\n                onClick={() => navigate(`/edit/${note._id}`)}\r\n              >\r\n                Edit\r\n              </Button>\r\n\r\n              {/* Delete Button */}\r\n              <Button\r\n                variant=\"contained\"\r\n                sx={{\r\n                  backgroundColor: '#d32f2f', // Red for delete button\r\n                  color: '#ffffff',\r\n                  '&:hover': {\r\n                    backgroundColor: '#b71c1c',\r\n                  },\r\n                }}\r\n                onClick={async () => {\r\n                  const token = localStorage.getItem('token');\r\n                  await fetch(`http://localhost:5000/api/notes/${note._id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                      'Authorization': `Bearer ${token}`,\r\n                    },\r\n                  });\r\n                  setNotes(notes.filter((n) => n._id !== note._id));\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Box>\r\n          ))\r\n        ) : (\r\n          <Typography>You currently have no notes.</Typography>\r\n        )}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}