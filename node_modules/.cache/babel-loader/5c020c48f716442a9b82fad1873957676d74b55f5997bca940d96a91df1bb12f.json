{"ast":null,"code":"var _jsxFileName = \"D:\\\\5 Downloads\\\\Skool\\\\Comp Sci\\\\Java\\\\web-based-notes\\\\notes-frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Container, Typography, Grid, Box, Switch } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  darkMode,\n  setDarkMode\n}) => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const navigate = useNavigate();\n\n  // Fetch notes when the component mounts\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/notes', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setNotes(data);\n    };\n    fetchNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      paddingTop: '20px',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '20px',\n        width: '80%',\n        // Ensure the header spans 80% of the screen width\n        margin: '0 auto',\n        backgroundColor: 'var(--box-background-color)',\n        padding: '16px',\n        borderRadius: '8px',\n        boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          color: 'var(--text-color)'\n        },\n        children: \"Jeremy's Notes App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            marginRight: 1,\n            color: 'var(--text-color)'\n          },\n          children: \"Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          checked: darkMode,\n          onChange: () => setDarkMode(!darkMode)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Your Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => navigate('/create'),\n        sx: {\n          marginBottom: '20px'\n        },\n        children: \"Add New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), notes.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              padding: '20px',\n              backgroundColor: 'var(--box-background-color)',\n              borderRadius: '8px',\n              boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\n              textAlign: 'left'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                marginBottom: '10px'\n              },\n              children: note.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                marginBottom: '10px'\n              },\n              children: note.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: () => navigate(`/edit/${note._id}`),\n              sx: {\n                marginRight: '10px'\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: async () => {\n                const token = localStorage.getItem('token');\n                await fetch(`http://localhost:5000/api/notes/${note._id}`, {\n                  method: 'DELETE',\n                  headers: {\n                    'Authorization': `Bearer ${token}`\n                  }\n                });\n                setNotes(notes.filter(n => n._id !== note._id)); // Remove the note from state\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, note._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"You currently have no notes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"v5JzgSEhIhYiWUvdwbtVzPSpW+Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Button","Container","Typography","Grid","Box","Switch","useNavigate","jsxDEV","_jsxDEV","Dashboard","darkMode","setDarkMode","_s","notes","setNotes","navigate","fetchNotes","token","localStorage","getItem","response","fetch","headers","data","json","sx","paddingTop","minHeight","children","display","justifyContent","alignItems","marginBottom","width","margin","backgroundColor","padding","borderRadius","boxShadow","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","marginRight","checked","onChange","textAlign","gutterBottom","onClick","length","container","spacing","map","note","item","xs","sm","md","title","content","_id","method","filter","n","_c","$RefreshReg$"],"sources":["D:/5 Downloads/Skool/Comp Sci/Java/web-based-notes/notes-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Container, Typography, Grid, Box, Switch } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = ({ darkMode, setDarkMode }) => {\r\n  const [notes, setNotes] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch notes when the component mounts\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/notes', {\r\n        headers: { 'Authorization': `Bearer ${token}` },\r\n      });\r\n      const data = await response.json();\r\n      setNotes(data);\r\n    };\r\n\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <Container sx={{ paddingTop: '20px', minHeight: '100vh' }}>\r\n      {/* Header Section with Dark Mode Toggle */}\r\n      <Box \r\n        sx={{\r\n          display: 'flex', \r\n          justifyContent: 'space-between', \r\n          alignItems: 'center', \r\n          marginBottom: '20px',\r\n          width: '80%', // Ensure the header spans 80% of the screen width\r\n          margin: '0 auto',\r\n          backgroundColor: 'var(--box-background-color)',\r\n          padding: '16px',\r\n          borderRadius: '8px',\r\n          boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" sx={{ color: 'var(--text-color)' }}>\r\n          Jeremy's Notes App\r\n        </Typography>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Typography variant=\"body1\" sx={{ marginRight: 1, color: 'var(--text-color)' }}>\r\n            Dark Mode\r\n          </Typography>\r\n          <Switch checked={darkMode} onChange={() => setDarkMode(!darkMode)} />\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Notes Section */}\r\n      <Box sx={{ textAlign: 'center' }}>\r\n        <Typography variant=\"h4\" gutterBottom>Your Notes</Typography>\r\n        \r\n        {/* Button to create a new note */}\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          onClick={() => navigate('/create')}\r\n          sx={{ marginBottom: '20px' }}\r\n        >\r\n          Add New Note\r\n        </Button>\r\n\r\n        {/* Notes Grid */}\r\n        {notes.length > 0 ? (\r\n          <Grid container spacing={4}>\r\n            {notes.map((note) => (\r\n              <Grid item xs={12} sm={6} md={4} key={note._id}>\r\n                <Box\r\n                  sx={{\r\n                    padding: '20px',\r\n                    backgroundColor: 'var(--box-background-color)',\r\n                    borderRadius: '8px',\r\n                    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\r\n                    textAlign: 'left',\r\n                  }}\r\n                >\r\n                  <Typography variant=\"h6\" sx={{ marginBottom: '10px' }}>\r\n                    {note.title}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ marginBottom: '10px' }}>\r\n                    {note.content}\r\n                  </Typography>\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    onClick={() => navigate(`/edit/${note._id}`)}\r\n                    sx={{ marginRight: '10px' }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    onClick={async () => {\r\n                      const token = localStorage.getItem('token');\r\n                      await fetch(`http://localhost:5000/api/notes/${note._id}`, {\r\n                        method: 'DELETE',\r\n                        headers: {\r\n                          'Authorization': `Bearer ${token}`,\r\n                        },\r\n                      });\r\n                      setNotes(notes.filter((n) => n._id !== note._id)); // Remove the note from state\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Box>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        ) : (\r\n          <Typography>You currently have no notes.</Typography>\r\n        )}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}