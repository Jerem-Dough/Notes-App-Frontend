{"ast":null,"code":"var _jsxFileName = \"D:\\\\5 Downloads\\\\Skool\\\\Comp Sci\\\\Java\\\\web-based-notes\\\\notes-frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Container, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const navigate = useNavigate();\n\n  // Fetch notes when the component mounts\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/notes', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setNotes(data);\n    };\n    fetchNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Your Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => navigate('/create'),\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"Add New Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), notes.length > 0 ? notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: note.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          marginRight: '10px'\n        },\n        onClick: () => navigate(`/edit/${note._id}`) // Navigate to EditNote page\n        ,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: async () => {\n          const token = localStorage.getItem('token');\n          await fetch(`http://localhost:5000/api/notes/${note._id}`, {\n            method: 'DELETE',\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          setNotes(notes.filter(n => n._id !== note._id)); // Remove note from state\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, note._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"You currently have no notes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"v5JzgSEhIhYiWUvdwbtVzPSpW+Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Button","Container","Typography","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","notes","setNotes","navigate","fetchNotes","token","localStorage","getItem","response","fetch","headers","data","json","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginBottom","length","map","note","title","content","marginRight","_id","color","method","filter","n","_c","$RefreshReg$"],"sources":["D:/5 Downloads/Skool/Comp Sci/Java/web-based-notes/notes-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Container, Typography } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch notes when the component mounts\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/notes', {\r\n        headers: { 'Authorization': `Bearer ${token}` },\r\n      });\r\n      const data = await response.json();\r\n      setNotes(data);\r\n    };\r\n\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom>Your Notes</Typography>\r\n      \r\n      {/* Button to create a new note */}\r\n      <Button \r\n        variant=\"contained\" \r\n        onClick={() => navigate('/create')}\r\n        style={{ marginBottom: '20px' }}\r\n      >\r\n        Add New Note\r\n      </Button>\r\n\r\n      {/* Display the list of notes */}\r\n      {notes.length > 0 ? (\r\n        notes.map((note) => (\r\n          <div key={note._id} style={{ marginBottom: '20px' }}>\r\n            <Typography variant=\"h6\">{note.title}</Typography>\r\n            <Typography>{note.content}</Typography>\r\n            <Button \r\n              variant=\"contained\" \r\n              style={{ marginRight: '10px' }}\r\n              onClick={() => navigate(`/edit/${note._id}`)} // Navigate to EditNote page\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"secondary\"\r\n              onClick={async () => {\r\n                const token = localStorage.getItem('token');\r\n                await fetch(`http://localhost:5000/api/notes/${note._id}`, {\r\n                  method: 'DELETE',\r\n                  headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                  },\r\n                });\r\n                setNotes(notes.filter((n) => n._id !== note._id)); // Remove note from state\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <Typography>You currently have no notes.</Typography>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}