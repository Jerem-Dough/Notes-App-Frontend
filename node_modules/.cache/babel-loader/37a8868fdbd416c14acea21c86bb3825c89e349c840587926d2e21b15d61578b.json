{"ast":null,"code":"var _jsxFileName = \"D:\\\\5 Downloads\\\\Skool\\\\Comp Sci\\\\Java\\\\web-based-notes\\\\notes-frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Container, Typography, Box } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport Header from './Header'; // Import the new Header component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  darkMode,\n  setDarkMode\n}) => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const navigate = useNavigate();\n\n  // Fetch notes when the component mounts\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/notes', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setNotes(data);\n    };\n    fetchNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      paddingTop: '20px',\n      minHeight: '100vh',\n      maxHeight: '100vh',\n      overflowY: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      darkMode: darkMode,\n      setDarkMode: setDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Your Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          marginBottom: '20px',\n          backgroundColor: darkMode ? '#6a1b9a' : '#1976d2',\n          color: '#ffffff',\n          '&:hover': {\n            backgroundColor: darkMode ? '#5a1281' : '#115293'\n          }\n        },\n        onClick: () => navigate('/create'),\n        children: \"Add New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        // Stack notes vertically\n        gap: '20px',\n        // Space between notes\n        overflowY: 'auto' // Enable scrolling for the notes section\n      },\n      children: notes.length > 0 ? notes.map(note => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: '20px',\n          backgroundColor: 'var(--box-background-color)',\n          borderRadius: '8px',\n          boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\n          textAlign: 'left',\n          wordWrap: 'break-word',\n          // Ensure long text breaks properly\n          overflowWrap: 'anywhere',\n          // Allow text to break within words\n          minWidth: '300px' // Set a minimum width for notes\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            marginBottom: '10px'\n          },\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            marginBottom: '10px'\n          },\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          sx: {\n            color: darkMode ? '#6a1b9a' : '#1976d2',\n            // Purple in dark mode, blue in light mode\n            borderColor: darkMode ? '#6a1b9a' : '#1976d2',\n            '&:hover': {\n              backgroundColor: darkMode ? '#5a1281' : '#115293',\n              borderColor: darkMode ? '#5a1281' : '#115293'\n            },\n            marginRight: '10px'\n          },\n          onClick: () => navigate(`/edit/${note._id}`),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            backgroundColor: '#d32f2f',\n            // Red for delete button\n            color: '#ffffff',\n            '&:hover': {\n              backgroundColor: '#b71c1c'\n            }\n          },\n          onClick: async () => {\n            const token = localStorage.getItem('token');\n            await fetch(`http://localhost:5000/api/notes/${note._id}`, {\n              method: 'DELETE',\n              headers: {\n                'Authorization': `Bearer ${token}`\n              }\n            });\n            setNotes(notes.filter(n => n._id !== note._id));\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, note._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"You currently have no notes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"v5JzgSEhIhYiWUvdwbtVzPSpW+Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Button","Container","Typography","Box","useNavigate","Header","jsxDEV","_jsxDEV","Dashboard","darkMode","setDarkMode","_s","notes","setNotes","navigate","fetchNotes","token","localStorage","getItem","response","fetch","headers","data","json","sx","paddingTop","minHeight","maxHeight","overflowY","children","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","marginBottom","variant","gutterBottom","backgroundColor","color","onClick","display","flexDirection","gap","length","map","note","padding","borderRadius","boxShadow","wordWrap","overflowWrap","minWidth","title","content","borderColor","marginRight","_id","method","filter","n","_c","$RefreshReg$"],"sources":["D:/5 Downloads/Skool/Comp Sci/Java/web-based-notes/notes-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Container, Typography, Box } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from './Header';  // Import the new Header component\r\n\r\nconst Dashboard = ({ darkMode, setDarkMode }) => {\r\n  const [notes, setNotes] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch notes when the component mounts\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/notes', {\r\n        headers: { 'Authorization': `Bearer ${token}` },\r\n      });\r\n      const data = await response.json();\r\n      setNotes(data);\r\n    };\r\n\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <Container sx={{ paddingTop: '20px', minHeight: '100vh', maxHeight: '100vh', overflowY: 'auto' }}>\r\n      {/* Use the shared Header component */}\r\n      <Header darkMode={darkMode} setDarkMode={setDarkMode} />\r\n\r\n      {/* Notes Section */}\r\n      <Box sx={{ textAlign: 'center', marginBottom: '20px' }}>\r\n        <Typography variant=\"h4\" gutterBottom>Your Notes</Typography>\r\n\r\n        {/* Button to create a new note */}\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{\r\n            marginBottom: '20px',\r\n            backgroundColor: darkMode ? '#6a1b9a' : '#1976d2',\r\n            color: '#ffffff',\r\n            '&:hover': {\r\n              backgroundColor: darkMode ? '#5a1281' : '#115293',\r\n            },\r\n          }}\r\n          onClick={() => navigate('/create')}\r\n        >\r\n          Add New Note\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Notes Grid */}\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column', // Stack notes vertically\r\n          gap: '20px',  // Space between notes\r\n          overflowY: 'auto',  // Enable scrolling for the notes section\r\n        }}\r\n      >\r\n        {notes.length > 0 ? (\r\n          notes.map((note) => (\r\n            <Box\r\n              key={note._id}\r\n              sx={{\r\n                padding: '20px',\r\n                backgroundColor: 'var(--box-background-color)',\r\n                borderRadius: '8px',\r\n                boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\r\n                textAlign: 'left',\r\n                wordWrap: 'break-word',  // Ensure long text breaks properly\r\n                overflowWrap: 'anywhere',  // Allow text to break within words\r\n                minWidth: '300px',  // Set a minimum width for notes\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" sx={{ marginBottom: '10px' }}>\r\n                {note.title}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ marginBottom: '10px' }}>\r\n                {note.content}\r\n              </Typography>\r\n\r\n              {/* Edit Button */}\r\n              <Button\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  color: darkMode ? '#6a1b9a' : '#1976d2',  // Purple in dark mode, blue in light mode\r\n                  borderColor: darkMode ? '#6a1b9a' : '#1976d2',\r\n                  '&:hover': {\r\n                    backgroundColor: darkMode ? '#5a1281' : '#115293',\r\n                    borderColor: darkMode ? '#5a1281' : '#115293',\r\n                  },\r\n                  marginRight: '10px',\r\n                }}\r\n                onClick={() => navigate(`/edit/${note._id}`)}\r\n              >\r\n                Edit\r\n              </Button>\r\n\r\n              {/* Delete Button */}\r\n              <Button\r\n                variant=\"contained\"\r\n                sx={{\r\n                  backgroundColor: '#d32f2f', // Red for delete button\r\n                  color: '#ffffff',\r\n                  '&:hover': {\r\n                    backgroundColor: '#b71c1c',\r\n                  },\r\n                }}\r\n                onClick={async () => {\r\n                  const token = localStorage.getItem('token');\r\n                  await fetch(`http://localhost:5000/api/notes/${note._id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                      'Authorization': `Bearer ${token}`,\r\n                    },\r\n                  });\r\n                  setNotes(notes.filter((n) => n._id !== note._id));\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Box>\r\n          ))\r\n        ) : (\r\n          <Typography>You currently have no notes.</Typography>\r\n        )}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}