{"ast":null,"code":"import React,{useState,useEffect}from'react';import{TextField,Button,Container,Typography}from'@mui/material';import{useNavigate,useParams}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EditNote=()=>{const{id}=useParams();// Get the note ID from the URL\nconst[title,setTitle]=useState('');const[content,setContent]=useState('');const navigate=useNavigate();// Fetch the note data when the component mounts\nuseEffect(()=>{const fetchNote=async()=>{const token=localStorage.getItem('token');const response=await fetch(`http://localhost:5000/api/notes/${id}`,{headers:{'Authorization':`Bearer ${token}`}});const data=await response.json();if(response.ok){setTitle(data.title);setContent(data.content);}else{console.error(\"Error fetching note:\",data.message);}};fetchNote();},[id]);// Handle editing the note\nconst handleEditNote=async e=>{e.preventDefault();const token=localStorage.getItem('token');const updatedNote={title,content};const response=await fetch(`http://localhost:5000/api/notes/${id}`,{method:'PUT',headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`},body:JSON.stringify(updatedNote)});if(response.ok){navigate('/');// Redirect to home after editing\n}else{console.error('Error updating note:',await response.json());}};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Edit Note\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleEditNote,children:[/*#__PURE__*/_jsx(TextField,{label:\"Title\",fullWidth:true,value:title,onChange:e=>setTitle(e.target.value),margin:\"normal\"}),/*#__PURE__*/_jsx(TextField,{label:\"Content\",fullWidth:true,multiline:true,rows:4,value:content,onChange:e=>setContent(e.target.value),margin:\"normal\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",type:\"submit\",children:\"Save Changes\"})]})]});};export default EditNote;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Container","Typography","useNavigate","useParams","jsx","_jsx","jsxs","_jsxs","EditNote","id","title","setTitle","content","setContent","navigate","fetchNote","token","localStorage","getItem","response","fetch","headers","data","json","ok","console","error","message","handleEditNote","e","preventDefault","updatedNote","method","body","JSON","stringify","children","variant","gutterBottom","onSubmit","label","fullWidth","value","onChange","target","margin","multiline","rows","color","type"],"sources":["D:/5 Downloads/Skool/Comp Sci/Java/web-based-notes/notes-frontend/src/components/EditNote.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Container, Typography } from '@mui/material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst EditNote = () => {\r\n  const { id } = useParams();  // Get the note ID from the URL\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch the note data when the component mounts\r\n  useEffect(() => {\r\n    const fetchNote = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:5000/api/notes/${id}`, {\r\n        headers: { 'Authorization': `Bearer ${token}` },\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setTitle(data.title);\r\n        setContent(data.content);\r\n      } else {\r\n        console.error(\"Error fetching note:\", data.message);\r\n      }\r\n    };\r\n\r\n    fetchNote();\r\n  }, [id]);\r\n\r\n  // Handle editing the note\r\n  const handleEditNote = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n    const updatedNote = { title, content };\r\n\r\n    const response = await fetch(`http://localhost:5000/api/notes/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(updatedNote),\r\n    });\r\n\r\n    if (response.ok) {\r\n      navigate('/');  // Redirect to home after editing\r\n    } else {\r\n      console.error('Error updating note:', await response.json());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom>Edit Note</Typography>\r\n      <form onSubmit={handleEditNote}>\r\n        <TextField\r\n          label=\"Title\"\r\n          fullWidth\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Content\"\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Save Changes\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditNote;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}